name: Lighthouse PR Comparison

on:
  pull_request:
    branches:
      - "**"

jobs:
  lighthouse-main:
    name: Lighthouse on main branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install LHCI CLI
        run: npm install -g @lhci/cli

      - name: Run LHCI on production site
        run: |
          mkdir -p .lighthouseci
          lhci autorun \
            --collect.url="https://www.keploy.io/blog" \
            --upload.target=filesystem \
            --upload.outputDir=.lighthouseci \
            --upload.reportFilenamePattern="main-report-%%DATE%%-%%RANDOM%%.json"

      - name: Display Main Lighthouse score
        run: |
          MAIN_REPORT=$(ls .lighthouseci/main-report-*.json | head -1)
          MAIN_SCORE=$(jq '.categories.performance.score * 100' "$MAIN_REPORT")
          echo "Main branch performance score: $MAIN_SCORE"

  lighthouse-pr:
    name: Lighthouse on PR branch
    runs-on: ubuntu-latest
    needs: lighthouse-main

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build Next.js application
        env:
          WORDPRESS_API_URL: "https://wp.keploy.io/graphql"
          NEXT_PUBLIC_WORDPRESS_API_URL: "https://wp.keploy.io/graphql"
        run: npm run build

      - name: Start Next.js app
        env:
          WORDPRESS_API_URL: "https://wp.keploy.io/graphql"
          NEXT_PUBLIC_WORDPRESS_API_URL: "https://wp.keploy.io/graphql"
        run: |
          npm run start &
          sleep 10

      - name: Install LHCI CLI
        run: npm install -g @lhci/cli

      - name: Run LHCI on PR branch
        run: |
          mkdir -p .lighthouseci
          lhci autorun \
            --collect.url="http://localhost:3000/blog" \
            --upload.target=filesystem \
            --upload.outputDir=.lighthouseci \
            --upload.reportFilenamePattern="pr-report-%%DATE%%-%%RANDOM%%.json"

      - name: Display PR Lighthouse score
        run: |
          PR_REPORT=$(ls .lighthouseci/pr-report-*.json | head -1)
          PR_SCORE=$(jq '.categories.performance.score * 100' "$PR_REPORT")
          echo "PR branch performance score: $PR_SCORE"

  lighthouse-compare:
    name: Compare Lighthouse scores
    runs-on: ubuntu-latest
    needs: [lighthouse-main, lighthouse-pr]

    steps:
      - name: Compare Lighthouse performance scores
        run: |
          # Find the latest main report
          MAIN_REPORT=$(ls .lighthouseci/main-report-*.json | head -1)
          # Find the latest PR report
          PR_REPORT=$(ls .lighthouseci/pr-report-*.json | head -1)
          
          MAIN_SCORE=$(jq '.categories.performance.score * 100' "$MAIN_REPORT")
          PR_SCORE=$(jq '.categories.performance.score * 100' "$PR_REPORT")

          echo "Main branch performance score: $MAIN_SCORE"
          echo "PR branch performance score: $PR_SCORE"

      - name: Fail if performance regressed
        run: |
          MAIN_SCORE=${{ steps.compare.outputs.MAIN_SCORE }}
          PR_SCORE=${{ steps.compare.outputs.PR_SCORE }}
          
          # Add a small buffer (0.5) to account for natural variance
          if (( $(echo "$PR_SCORE < ($MAIN_SCORE - 0.5)" | bc -l) )); then
            echo "❌ Performance score dropped in PR ($PR_SCORE < $MAIN_SCORE)"
            exit 1
          else
            echo "✅ PR performance score is good!"
          fi
